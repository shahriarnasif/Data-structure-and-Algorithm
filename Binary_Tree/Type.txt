Full Binary Tree:---
A Binary Tree is a full binary tree if every node has 0 or 2 children. The following are the examples of a full binary tree. We can also say a full binary tree is a binary tree in which all nodes except leaf nodes have two children. 

              18
           /       \  
         15         30  
        /  \        /  \
      40    50    100   40
Complete Binary Tree:---
A complete binary tree is just like a full binary tree, but with two major differences.

1.Every level must be completely filled.
2.All the leaf elements must lean towards the left.
3.The last leaf element might not have a right sibling i.e. a complete binary tree doesn't have to be a full binary tree.




               18
           /       \  
         15         30  
        /  \        /  \
      40    50    100   40
     /  \   /
    8   7  9 

Practical example of Complete Binary Tree is Binary Heap. 


Perfect Binary Tree:--
A perfect binary tree is a type of binary tree in which every internal node has exactly two child nodes and all the leaf nodes are at the same level.
               18
           /       \  
         15         30  
        /  \        /  \
      40    50    100   40


Balanced Binary Tree:---
It is a type of binary tree in which the difference between the height of the left and the right subtree for each node is either 0 or 1.


A binary tree is balanced if the height of the tree is O(Log n) where n is the number of nodes. For Example, the AVL tree maintains O(Log n) height by making sure that the difference between the heights of the left and right subtrees is at most 1. Red-Black trees maintain O(Log n) height by making sure that the number of Black nodes on every root to leaf paths is the same and there are no adjacent red nodes. Balanced Binary Search trees are performance-wise good as they provide O(log n) time for search, insert and delete. 


